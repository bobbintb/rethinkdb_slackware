name: Build rethinkdb
on:
  workflow_dispatch:
env:
  VERSION: "2.4.4"
  GIT_URL: "https://github.com/rethinkdb/rethinkdb.git"
  NAME: "rethinkdb"
  SHORT_DESC: "A scalable database built for realtime applications."
  LONG_DESC: "RethinkDB is the first open-source scalable database built for realtime applications. It exposes a new database access model, in which the developer can tell the database to continuously push updated query results to applications without polling for changes. RethinkDB allows developers to build scalable realtime apps in a fraction of the time with less effort."
  URL: "https://rethinkdb.com"
  SSL_CERT_FILE: "/etc/ssl/certs/ca-certificates.crt"
jobs:
  slackware-job:
    permissions: write-all
    runs-on: ubuntu-latest
    container: spaceinvaderone/auto_slack_pack
    steps:
    - name: delete me later
      run: update-ca-certificates && git config --global http.sslCAinfo /etc/ssl/certs/ca-certificates.crt
    - name: Checkout
      uses: actions/checkout@v4.1.7
    - name: Update and install packages
      run: |
        echo "================================= Updating packages ================================="
        CONF_FILE="/etc/slackpkg/slackpkg.conf"
        sed -i "s/^DIALOG=.*/DIALOG=off/" "$CONF_FILE"
        sed -i "s/^BATCH=.*/BATCH=on/" "$CONF_FILE"
        sed -i "s/^DEFAULT_ANSWER=.*/DEFAULT_ANSWER=y/" "$CONF_FILE"
        slackpkg update <<< y
        slackpkg install ca-certificates jemalloc re2c
        wget https://ftp.sotirov-bg.net/pub/contrib/slackware/packages/slackware64-15.0/protobuf-3.19.6-x86_64-1gds.txz
        wget https://ftp.sotirov-bg.net/pub/contrib/slackware/packages/slackware64-15.0/gtest-1.11.0-x86_64-2gds.txz
        installpkg *.txz
    - name: Clone and make
      run: |
        echo "================================= Cloning ${VERSION} from git ================================="
        git clone --branch v${VERSION} --depth 1 $GIT_URL
        cd rethinkdb
        echo "================================= Setting configuration ================================="
        ./configure --allow-fetch PYTHON=/usr/bin/python3
        echo "================================= Making ================================="
        make -j4
        echo "================================= Installing ================================="
        make install
    - name: Prep package
      run: |
        cd ./rethinkdb
        echo "================================= Creating directory structure ================================="
        mkdir -p package/usr/local/bin
        mkdir -p package/usr/local/share/man/man1
        mkdir -p package/usr/local/share/doc/rethinkdb/copyright
        mkdir -p package/usr/local/etc/init.d
        mkdir -p package/usr/local/var/lib/rethinkdb/instances.d
        mkdir -p package/usr/local/etc/rethinkdb
        mkdir -p package/install
        echo "================================= Copying files ================================="
        cp ./build/release/rethinkdb ./package/usr/local/bin
        cp ./build/release/assets/rethinkdb.1.gz ./package/usr/local/share/man/man1
        cp ./packaging/assets/docs/LICENSE ./package/usr/local/share/doc/rethinkdb/copyright
        cp ./packaging/assets/init/rethinkdb ./package/usr/local/etc/init.d
        cp /usr/local/etc/rethinkdb/default.conf.sample ./package/usr/local/etc/rethinkdb/default.conf.sample
        wget https://master.dl.sourceforge.net/project/slack-desc/slackdesc-0.03/slackdesc
        chmod +x slackdesc
        ./slackdesc "${NAME}" "${SHORT_DESC}" "${LONG_DESC}" "${URL}" > ./package/install/slack-desc
        echo "================================= Creating package v${VERSION} ================================="
        cd ./package
        makepkg ../rethinkdb-${VERSION}-x86_64.txz
    - name: Move package
      run: |
        cd ..
        mkdir release
        mv ./slackware_packages/rethinkdb/*.txz ./release
    - name: Move package
      run: |
        mv ../release/*.txz ./
        git config --global --add safe.directory /__w/slackware_packages/slackware_packages
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: ${{ env.VERSION }}
        make_latest: true
        files: |
          *.txz
